/*
IPDetective API

Testing DefaultAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package emaildetective

import (
	"context"
	"log"
	"testing"

	ipdetective "github.com/AndrewCopeland/go-ipdetective"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_emaildetective_DefaultAPIService(t *testing.T) {

	configuration := ipdetective.NewConfiguration()
	apiClient := ipdetective.NewAPIClient(configuration)

	t.Run("Test DefaultAPIService GetBulkIP", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.DefaultAPI.GetBulkIP(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultAPIService GetIP", func(t *testing.T) {

		var ip string

		resp, httpRes, err := apiClient.DefaultAPI.GetIP(context.Background(), ip).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultAPIService GetMyIP", func(t *testing.T) {

		resp, httpRes, err := apiClient.DefaultAPI.GetMyIP(context.Background()).Info(false).Execute()
		log.Print(resp)
		log.Print(httpRes)
		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultAPIService GetUsage", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.DefaultAPI.GetUsage(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
